import random
class Solution:
    def updateMatrix(self, matrix):
        """
        :type matrix: List[List[int]]
        :rtype: List[List[int]]
        """
        ans = matrix
        for i in range(0, len(matrix)-1, 1):
            for j in range(0, len(matrix[0])-1, 1):
                if matrix[i][j] != 0:
                    ans[i][j] = self.find_zero(matrix,i , j)
        return ans
                    
    def find_zero(self,matrix, x , y):
        vector = []
        for i in range(1, (len(matrix)+len(matrix[0])), 1):
            vector = self.possable(i)
            for j in vector:
                try:
                    if matrix[x+j[0]][y+j[1]] == 0:
                        return i
                except:
                    continue
                    
    def possable(self,n):
        vector = []
        for i in range(n+1):
            if (n-i) != 0:
                vector.append([i, n-i])
                vector.append([i, -(n-i)])
            if i != 0:
                vector.append([i, n-i])
                vector.append([-i, n-i])
        return vector

m = []
ma = [
    [0,0,0],
    [0,1,0],
    [1,1,1]
]
for i in range(3):
    m.append([])
    for j in range(3):
        m[i].append(random.randint(0,1))
s = Solution()
print(ma)
print(s.updateMatrix(ma))
